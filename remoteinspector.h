/////////////////////////////////////////////////////////////////////////////
// Name:        remoteInspector.h
// Purpose:     
// Author:      Vamarc Raelonda
// Modified by: 
// Created:     22/07/2007 20:18:54
// RCS-ID:      
// Copyright:   (c) Vamarc Raelonda and Resonance Microwave Systems
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 22/07/2007 20:18:54

#ifndef _REMOTEINSPECTOR_H_
#define _REMOTEINSPECTOR_H_

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma interface "remoteinspector.h"
#endif

#include "wx/wx.h"

/*!
 * Includes
 */

////@begin includes
#include "wx/xrc/xmlres.h"
////@end includes

/*!
 * Forward declarations
 */

////@begin forward declarations
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_WX_MAIN_REM_DIALOG 10000
#define SYMBOL_WXDIALOG_STYLE wxCAPTION|wxRESIZE_BORDER|wxSYSTEM_MENU|wxCLOSE_BOX
#define SYMBOL_WXDIALOG_TITLE _("Remote Inspector")
#define SYMBOL_WXDIALOG_IDNAME ID_WX_MAIN_REM_DIALOG
#define SYMBOL_WXDIALOG_SIZE wxSize(400, 300)
#define SYMBOL_WXDIALOG_POSITION wxDefaultPosition
////@end control identifiers


/*!
 * wxMainRemoteDialog class declaration
 */

class wxMainRemoteDialog: public wxDialog
{    
    DECLARE_DYNAMIC_CLASS( wxMainRemoteDialog )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    wxMainRemoteDialog();
    wxMainRemoteDialog( wxWindow* parent, wxWindowID id = SYMBOL_WXDIALOG_IDNAME, const wxString& caption = SYMBOL_WXDIALOG_TITLE, const wxPoint& pos = SYMBOL_WXDIALOG_POSITION, const wxSize& size = SYMBOL_WXDIALOG_SIZE, long style = SYMBOL_WXDIALOG_STYLE  );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_WXDIALOG_IDNAME, const wxString& caption = SYMBOL_WXDIALOG_TITLE, const wxPoint& pos = SYMBOL_WXDIALOG_POSITION, const wxSize& size = SYMBOL_WXDIALOG_SIZE, long style = SYMBOL_WXDIALOG_STYLE );

    /// Destructor
    ~wxMainRemoteDialog();

    /// Initialises member variables
    void Init();

    /// Creates the controls and sizers
    void CreateControls();

////@begin wxMainRemoteDialog event handler declarations

    /// wxEVT_COMMAND_CHECKBOX_CLICKED event handler for ID_CK__LOW_BATTERY
    void OnCkLowBatteryClick( wxCommandEvent& event );

    /// wxEVT_LEAVE_WINDOW event handler for ID_ED__DIP_SWITCH
    void OnLeaveWindow( wxMouseEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BT__SLOW_TIMER_n
    void OnBtSlowTimer1Click( wxCommandEvent& event );
    void OnBtSlowTimer2Click( wxCommandEvent& event );
    void OnBtSlowTimer3Click( wxCommandEvent& event );
    void OnBtSlowTimer4Click( wxCommandEvent& event );
    void OnBtSlowTimer5Click( wxCommandEvent& event );
    void OnBtSlowTimer6Click( wxCommandEvent& event );
    void OnBtSlowTimer7Click( wxCommandEvent& event );
    void OnBtSlowTimer8Click( wxCommandEvent& event );
    void OnBtSlowTimer9Click( wxCommandEvent& event );
    void OnBtSlowTimer10Click( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BT__RESET
    void OnBtResetClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BT__CLEAR
    void OnBtClearClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BT__SAVE
    void OnBtSaveClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_BT__CLOSE
    void OnBtCloseClick( wxCommandEvent& event );

////@end wxMainRemoteDialog event handler declarations

    void log(const wxChar * msg);

////@begin wxMainRemoteDialog member function declarations

    wxString GetDipSwitchTxt() const { return m_dipSwitchTxt_old ; }
    void SetDipSwitchTxt(wxString value) { m_dipSwitchTxt_old = value ; }

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end wxMainRemoteDialog member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin wxMainRemoteDialog member variables
    wxTextCtrl* m_dipSwitchTxt;
    wxTextCtrl* m_logTxt;
    wxTextCtrl* m_slowTimer1Txt;
    wxTextCtrl* m_slowTimer2Txt;
    wxTextCtrl* m_slowTimer3Txt;
    wxTextCtrl* m_slowTimer4Txt;
    wxTextCtrl* m_slowTimer5Txt;
    wxTextCtrl* m_slowTimer6Txt;
    wxTextCtrl* m_slowTimer7Txt;
    wxTextCtrl* m_slowTimer8Txt;
    wxTextCtrl* m_slowTimer9Txt;
    wxTextCtrl* m_slowTimer10Txt;
    wxString m_dipSwitchTxt_old;
////@end wxMainRemoteDialog member variables

    int m_lowBattery;
};

#endif
    // _REMOTEINSPECTOR_H_
